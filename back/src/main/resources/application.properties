################## DB ################################
datasource.type=org.apache.commons.dbcp.BasicDataSource
datasource.driver-class-name=com.mysql.jdbc.Driver
datasource.validation-query=SELECT 1
datasource.test-on-borrow=true
datasource.time-between-eviction-runs-millis=6000
datasource.initialSize=5
datasource.maxActive=30

spring.shardingsphere.props.sql.show=true
#数据库文件位置
security.path=file:./config/
start.config.path=classpath:/

# shardingsphere 读写分离
# https://shardingsphere.apache.org/document/current/cn/user-manual/shardingsphere-jdbc/configuration/spring-boot-starter/read-write-split/

# 配置真实数据源
spring.shardingsphere.datasource.names=ds0,ds1

# 配置第 1 个数据源
spring.shardingsphere.datasource.ds0.type=${datasource.type}
spring.shardingsphere.datasource.ds0.driver-class-name=com.mysql.jdbc.Driver
spring.shardingsphere.datasource.ds0.url=jdbc:mysql://localhost:3306/example?useUnicode=true&characterEncoding=UTF-8&allowMultiQueries=true&serverTimezone=UTC
spring.shardingsphere.datasource.ds0.username=root
spring.shardingsphere.datasource.ds0.password=root

# 配置第 2 个数据源
spring.shardingsphere.datasource.ds1.type=${datasource.type}
spring.shardingsphere.datasource.ds1.driver-class-name=com.mysql.jdbc.Driver
spring.shardingsphere.datasource.ds1.url=jdbc:mysql://localhost:3306/example-s?useUnicode=true&characterEncoding=UTF-8&allowMultiQueries=true&serverTimezone=UTC
spring.shardingsphere.datasource.ds1.username=root
spring.shardingsphere.datasource.ds1.password=root


#spring.shardingsphere.rules.master-slave.data-sources.<master-slave-data-source-name>.master-data-source-name= # 主数据源名称
#spring.shardingsphere.rules.master-slave.data-sources.<master-slave-data-source-name>.slave-data-source-names= # 从数据源名称，多个从数据源用逗号分隔
#spring.shardingsphere.rules.master-slave.data-sources.<master-slave-data-source-name>.load-balancer-name= # 负载均衡算法名称
#
## 负载均衡算法配置
#spring.shardingsphere.rules.master-slave.load-balancers.<load-balance-algorithm-name>.type= # 负载均衡算法类型
#spring.shardingsphere.rules.master-slave.load-balancers.<load-balance-algorithm-name>.props.xxx= # 负载均衡算法属性配置


##读写分离 负责均衡算法 ROUND_ROBIN：轮询   RANDOM：随机
spring.shardingsphere.sharding.master-slave-rules.masterslave.master-data-source-name=ds0
spring.shardingsphere.sharding.master-slave-rules.masterslave.slave-data-source-names=ds1
spring.shardingsphere.sharding.master-slave-rules.masterslave.name=master-slave
spring.shardingsphere.sharding.master-slave-rules.masterslave.load-balance-algorithm-type=RANDOM


# 配置 t_order 表规则
#spring.shardingsphere.rules.sharding.tables.t_order.actual-data-nodes=ds$->{0..1}.t_order$->{0..1}
#
## 配置分库策略
#spring.shardingsphere.rules.sharding.tables.t_order.database-strategy.standard.sharding-column=user_id
#spring.shardingsphere.rules.sharding.tables.t_order.database-strategy.standard.sharding-algorithm-name=database_inline
#
## 配置分表策略
#spring.shardingsphere.rules.sharding.tables.t_order.table-strategy.standard.sharding-column=order_id
#spring.shardingsphere.rules.sharding.tables.t_order.table-strategy.standard.sharding-algorithm-name=table_inline
#
## 省略配置 t_order_item 表规则...
## ...
#
## 配置 分片算法
#spring.shardingsphere.rules.sharding.sharding-algorithms.database_inline.type=INLINE
#spring.shardingsphere.rules.sharding.sharding-algorithms.database_inline.props.algorithm.expression=ds_${user_id % 2}
#spring.shardingsphere.rules.sharding.sharding-algorithms.table_inline.type=INLINE
#spring.shardingsphere.rules.sharding.sharding-algorithms.table_inline.props.algorithm.expression=t_order_${order_id % 2}




mybatis.mapperLocations=classpath:/mapper/*.xml
